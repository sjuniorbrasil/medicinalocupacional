@model SaudeWeb.Models.Financeiro

@{
    ViewBag.Title = "Financeiro - Contas á Pagar/Receber";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Financeiro</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Contas á Pagar/Receber</h4>
        <p style="color:firebrick">
            @ViewBag.erro
        </p>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row" style="width:100%;margin-left:-30px">
            <button id="butao" class="btn-default btn-sm" type="button" >
                Lançamento<span class="fa fa-table" style="float:right;font-size:28px; margin-top:-3px"></span>
            </button>
        </div>
        <div id="divLancto">
            <div class="row">
                <div class="form-group col-md-2">
                    @Html.Label("Parcela", htmlAttributes: new { @class = "control-label" })
                    @Html.Editor("ParcelaIni", new { htmlAttributes = new { @class = "form-control", @style = "width:30%" } })                    
                </div>
                <div class="form-group col-md-2">
                    @Html.Label("de", htmlAttributes: new { @class = "control-label" })
                    @Html.Editor("ParcelaFim", new { htmlAttributes = new { @class = "form-control", @style = "width:30%" } })
                </div>
                <div class="form-group col-md-3" style="margin-right:5px">
                   @Html.LabelFor(model => model.Tipo, htmlAttributes: new { @class = "control-label " })
                   @Html.DropDownList("Tipo", null, htmlAttributes: new { @class = "form-control" })
               </div>  
                <div class="form-group col-md-3">
                    @Html.LabelFor(model => model.NumeroDocumento, htmlAttributes: new { @class = "control-label " })
                    @Html.EditorFor(model => model.NumeroDocumento, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NumeroDocumento, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row">
                <div class="form-group col-md-4">
                    @Html.HiddenFor(model => model.PessoaID, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.Label("Cadastro", htmlAttributes: new { @class = "control-label " })
                    @Html.EditorFor(model => model.ClienteDesc, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    <input type="button" value="..." onclick="PClienteOpen()" class="btn btn-success" id="botaoTop" />
                    @Html.ValidationMessageFor(model => model.PessoaID, "", new { @class = "text-danger" })
                </div>                
                <div class="form-group col-md-4">
                    @Html.HiddenFor(model => model.CategoriaID, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.Label("Plano de Contas", htmlAttributes: new { @class = "control-label " })
                    @Html.EditorFor(model => model.CategoriaDesc, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    <input type="button" value="..." onclick="PCategoriaOpen()" class="btn btn-success" id="botaoTop" />
                    @Html.ValidationMessageFor(model => model.CategoriaID, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.DataEmissao, htmlAttributes: new { @class = "control-label " })
                    @Html.EditorFor(model => model.DataEmissao, new { htmlAttributes = new { @class = "form-control", @onblur = "ValidaData(this)", @type = "text", @onkeypress = "mascaraData( this, event )", @placeholder = "DD/MM/AAAA" } })
                    @Html.ValidationMessageFor(model => model.DataEmissao, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row">
                <div class="form-group col-md-3" style="margin-right:3px">
                    @Html.LabelFor(model => model.DataVencimento, htmlAttributes: new { @class = "control-label " })
                    @Html.EditorFor(model => model.DataVencimento, new { htmlAttributes = new { @class = "form-control", @onblur = "ValidaData(this)", @type = "text", @onkeypress = "mascaraData( this, event )", @placeholder = "DD/MM/AAAA"  } })
                    @Html.ValidationMessageFor(model => model.DataVencimento, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-2">
                    @Html.LabelFor(model => model.Competencia, htmlAttributes: new { @class = "control-label " })
                    @Html.EditorFor(model => model.Competencia, new { htmlAttributes = new { @class = "form-control", @onkeypress = "mesAno( this, event )", @placeholder = "MM/AAAA" } })
                    @Html.ValidationMessageFor(model => model.Competencia, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-2" style="margin-right:3px">
                    @Html.LabelFor(model => model.Tipo, htmlAttributes: new { @class = "control-label " })
                    @Html.DropDownList("TipoCompetencia", null, htmlAttributes: new { @class = "form-control" })
                </div> 
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.Valor, htmlAttributes: new { @class = "control-label " })
                    @Html.EditorFor(model => model.Valor, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Valor, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row">
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.Observacao, htmlAttributes: new { @class = "control-label " })
                    @Html.TextAreaFor(model => model.Observacao, new { style = "width: 800px; height: 200px;", @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Observacao, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row" style="width:100%;margin-left:-30px;display:none">
            <button id="butao" class="btn-default btn-sm" type="button" onclick="mostrarBaixa()">
                Baixa<span class="glyphicon glyphicon-check" style="float:right;font-size:28px; margin-top:-3px"></span>
            </button>
        </div>
        <div class="row" id="divBaixa" style="margin-left:4px;display:none">
            <div class="row">
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.DataLiquidacao, htmlAttributes: new { @class = "control-label " })
                    @Html.EditorFor(model => model.DataLiquidacao, new { htmlAttributes = new { @class = "form-control", @onblur = "ValidaData(this)", @onkeypress = "mascaraData( this, event )", @placeholder="DD/MM/AAAA" , @readonly= "readonly" } })
                    @Html.ValidationMessageFor(model => model.DataLiquidacao, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.Juros, htmlAttributes: new { @class = "control-label " })
                    @Html.EditorFor(model => model.Juros, new { htmlAttributes = new { @class = "form-control" ,@value="0"} })
                    @Html.ValidationMessageFor(model => model.Juros, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.Multa, htmlAttributes: new { @class = "control-label " })
                    @Html.EditorFor(model => model.Multa, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Multa, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row">
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.Desconto, htmlAttributes: new { @class = "control-label " })
                    @Html.EditorFor(model => model.Desconto, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Desconto, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.ValorBaixado, htmlAttributes: new { @class = "control-label " })
                    @Html.EditorFor(model => model.ValorBaixado, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ValorBaixado, "", new { @class = "text-danger" }) 
                </div>
                <div class="form-group col-md-4">
                    
                </div>
            </div>
        </div>
        <div class="row">
            <input type="submit" value="Salvar" class="btn btn-success btn-sm" id="botaoTop" />
            @Html.ActionLink("Voltar", "Index", null, null, new { @class = "btn btn-info btn-sm", @id = "botaoTop" })
        </div>
    </div>
}



<div id="PCliente" class="modal" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-lg" style="width:70%" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title">Clientes</h4>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="form-group">
                        <div class="col-md-5">
                            <div class="input-group">
                                @Html.TextBox("PClienteFiltro", null, new { @class = "form-control" })
                                <span class="input-group-btn">
                                    <input type="button" id="PClienteBuscar" onclick="PClientePesquisa()" value="Localizar" class="btn btn-success" />
                                </span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row" style="width:100%; height:400px; overflow-y: scroll">
                    <table id="PClienteTable" class="table table-striped table-hover">
                        <thead>
                            <tr>
                                <th style="width:100px">Controle</th>
                                <th style="width:400px">Cadastro</th>
                                <th></th>
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Cancelar</button>
            </div>
        </div>
    </div>
</div>

<div id="PCategoria" class="modal" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-lg" style="width:70%" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title">Categorias</h4>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="form-group">
                        <div class="col-md-5">
                            <div class="input-group">
                                @Html.TextBox("PCategoriaFiltro", null, new { @class = "form-control" })
                                <span class="input-group-btn">
                                    <input type="button" id="PCategoriaBuscar" onclick="PCategoriaPesquisa()" value="Localizar" class="btn btn-success" />
                                </span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row" style="width:100%; height:400px; overflow-y: scroll">
                    <table id="PCategoriaTable" class="table table-striped table-hover">
                        <thead>
                            <tr>
                                <th style="width:100px">Controle</th>
                                <th style="width:400px">Conta</th>
                                <th></th>
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Cancelar</button>
            </div>
        </div>
    </div>
</div>

<script>
    function SelecionarCliente(ID, Razao) {
        $("#PessoaID").val(ID);
        $("#ClienteDesc").val(Razao);
        $('#PCliente').modal('toggle');
    }

    function SelecionarCategoria(ID, PlanoContaDesc) {
        $("#CategoriaID").val(ID);
        $("#CategoriaDesc").val(PlanoContaDesc);
        $('#PCategoria').modal('toggle');
    }


    function PClienteOpen() {
        $("#PCliente").modal("show");
    }

    function PCategoriaOpen() {
        $("#PCategoria").modal("show");
    }
    function PCategoriaPesquisa() {
        PesquisaCategoria();
    }


    function PClientePesquisa() {
        PesquisaCliente();
    }

    


    function PesquisaCliente() {

        var PClienteTable = $("#PClienteTable").DataTable();

        PClienteTable.clear();

        var url = "@Url.Action("PesquisaCliente","Pesquisa",null)?&filtro=" + $("#PClienteFiltro").val();

        $.getJSON(url, function (data) {

                        $.each(data, function (index, item) {
                        var botao = item["ID"] + ',"' + item["Razao"] + '"';
                        botao = "<input type='button' value='Selecionar' onclick='SelecionarCliente(" + botao + ")' class='btn btn-xs btn-success' />";

                        PClienteTable.row.add([item["ID"],
                                               item["Razao"],
                                               botao]).draw(false);

                    });
                }
            );
    }

    function PesquisaCategoria() {

        var PCategoriaTable = $("#PCategoriaTable").DataTable();

        PCategoriaTable.clear();

        var url = "@Url.Action("PesquisaCategoria","Pesquisa",null)?&filtro=" + $("#PCategoriaFiltro").val();

        $.getJSON(url, function (data) {

                        $.each(data, function (index, item) {
                            var botao = item["ID"] + ',"' + item["PlanoContaDesc"] + '"';
                        botao = "<input type='button' value='Selecionar' onclick='SelecionarCategoria(" + botao + ")' class='btn btn-xs btn-success' />";

                        PCategoriaTable.row.add([item["ID"],
                            item["PlanoContaDesc"],
                                               botao]).draw(false);

                    });
                }
            );
    }

     $(document).ready(function () {

         var PClienteTable = $("#PClienteTable").dataTable({
             "paging": false,
             "ordering": false,
             "info": false,
             "searching": false,
             "language": {
                 "emptyTable": "&nbsp"
             }
         }).DataTable();
    });

     $(document).ready(function () {

         var PCategoriaTable = $("#PCategoriaTable").dataTable({
             "paging": false,
             "ordering": false,
             "info": false,
             "searching": false,
             "language": {
                 "emptyTable": "&nbsp"
             }
         }).DataTable();
     });


     function mostrarBaixa() {
         var x = document.getElementById("divBaixa");
         var y = document.getElementById("divLancto");
         if (x.style.display === "none") {
             x.style.display = "block";
             y.style.display = "none";
         } else {
             x.style.display = "none";
             y.style.display = "block";
         }
     }
</script>