@model SaudeWeb.Models.BancoCaixa

@{
    ViewBag.Title = "Controle de Conta Corrente/Caixa";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Financeiro</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Controle de Conta Corrente/Caixa</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row">
            <div class="form-group col-md-4">                
                @Html.Label("Conta", new { @class = "control-label" })
                @Html.DropDownList("ContaID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ContaID, "", new { @class = "text-danger" })
            </div>
            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.Tipo, htmlAttributes: new { @class = "control-label " })
                @Html.DropDownList("Tipo", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Tipo, "", new { @class = "text-danger" })
            </div>            
            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.TpDocto, htmlAttributes: new { @class = "control-label" })
                @Html.DropDownList("TpDocto", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TpDocto, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">
            <div class="form-group col-md-4">
                @Html.HiddenFor(model => model.PessoaId, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.Label("Cadastro", htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.PessoaDesc, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                <input type="button" value="..." onclick="PClienteOpen()" class="btn btn-success" id="botaoTop" />
                @Html.ValidationMessageFor(model => model.PessoaId, "", new { @class = "text-danger" })
            </div>
            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.DataEmissao, htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.DataEmissao, new { htmlAttributes = new { @class = "form-control", @onblur = "ValidaData(this)", @type="text",@onkeypress = "mascaraData( this, event )", @placeholder = "DD/MM/AAAA" } })
                @Html.ValidationMessageFor(model => model.DataEmissao, "", new { @class = "text-danger" })
            </div>
            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.DataVencimento, htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.DataVencimento, new { htmlAttributes = new { @class = "form-control", @onblur = "ValidaData(this)", @type = "text", @onkeypress = "mascaraData( this, event )", @placeholder = "DD/MM/AAAA" } })
                @Html.ValidationMessageFor(model => model.DataVencimento, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">
            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.DataConciliacao, htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.DataConciliacao, new { htmlAttributes = new { @class = "form-control", @onblur = "ValidaData(this)", @type = "text", @onkeypress = "mascaraData( this, event )", @placeholder = "DD/MM/AAAA" } })
                @Html.ValidationMessageFor(model => model.DataConciliacao, "", new { @class = "text-danger" })
            </div>
            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.NumeroDocumento, htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.NumeroDocumento, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NumeroDocumento, "", new { @class = "text-danger" })
            </div>           
        </div>
        <div class="row">
            
            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.valor, htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.valor, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.valor, "", new { @class = "text-danger" })
            </div>
            <div class="form-group col-md-4">
                @Html.HiddenFor(model => model.PlanoContaID, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.Label("Plano de Contas", htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.PlanoContaDesc, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                <input type="button" value="..." onclick="PCategoriaOpen()" class="btn btn-success" id="botaoTop" />
                @Html.ValidationMessageFor(model => model.PlanoContaID, "", new { @class = "text-danger" })
            </div>    
        </div>
        <div class="row">            
            
        </div>        
        <div>
            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.Obs, htmlAttributes: new { @class = "control-label " })
                @Html.TextAreaFor(model => model.Obs, new { style = "width: 500px; height: 200px;", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Obs, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Salvar" class="btn btn-success btn-sm" id="botaoTop" />
                @Html.ActionLink("Voltar", "Index", null, null, new { @class = "btn btn-info btn-sm", @id = "botaoTop" })
            </div>
        </div>
    </div>
}
<div id="PCliente" class="modal" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-lg" style="width:70%" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title">Cadastros</h4>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="form-group">
                        <div class="col-md-5">
                            <div class="input-group">
                                @Html.TextBox("PClienteFiltro", null, new { @class = "form-control" })
                                <span class="input-group-btn">
                                    <input type="button" id="PClienteBuscar" onclick="PClientePesquisa()" value="Localizar" class="btn btn-success" />
                                </span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row" style="width:100%; height:400px; overflow-y: scroll">
                    <table id="PClienteTable" class="table table-striped table-hover">
                        <thead>
                            <tr>
                                <th style="width:100px">Controle</th>
                                <th style="width:400px">Cadastro</th>
                                <th></th>
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Cancelar</button>
            </div>
        </div>
    </div>
</div>

<div id="PCategoria" class="modal" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-lg" style="width:70%" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title">Plano de Contas</h4>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="form-group">
                        <div class="col-md-5">
                            <div class="input-group">
                                @Html.TextBox("PCategoriaFiltro", null, new { @class = "form-control" })
                                <span class="input-group-btn">
                                    <input type="button" id="PCategoriaBuscar" onclick="PCategoriaPesquisa()" value="Localizar" class="btn btn-success" />
                                </span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row" style="width:100%; height:400px; overflow-y: scroll">
                    <table id="PCategoriaTable" class="table table-striped table-hover">
                        <thead>
                            <tr>
                                <th style="width:100px">Controle</th>
                                <th style="width:400px">Conta</th>
                                <th></th>
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Cancelar</button>
            </div>
        </div>
    </div>
</div>
<script>

    function SelecionarCliente(ID, Razao) {
        $("#PessoaId").val(ID);
        $("#PessoaDesc").val(Razao);
        $('#PCliente').modal('toggle');
    }

    function SelecionarCategoria(ID, PlanoContaDesc) {
        $("#PlanoContaID").val(ID);
        $("#PlanoContaDesc").val(PlanoContaDesc);
        $('#PCategoria').modal('toggle');
    }


    function PClienteOpen() {
        $("#PCliente").modal("show");
    }

    function PCategoriaOpen() {
        $("#PCategoria").modal("show");
    }



    function PClientePesquisa() {
        PesquisaCliente();
    }

    function PCategoriaPesquisa() {
        PesquisaCategoria();
    }


    function PesquisaCliente() {

        var PClienteTable = $("#PClienteTable").DataTable();

        PClienteTable.clear();

        var url = "@Url.Action("PesquisaCliente","Pesquisa",null)?&filtro=" + $("#PClienteFiltro").val();

        $.getJSON(url, function (data) {

                        $.each(data, function (index, item) {
                        var botao = item["ID"] + ',"' + item["Razao"] + '"';
                        botao = "<input type='button' value='Selecionar' onclick='SelecionarCliente(" + botao + ")' class='btn btn-xs btn-success' />";

                        PClienteTable.row.add([item["ID"],
                                               item["Razao"],
                                               botao]).draw(false);

                    });
                }
            );
    }

    function PesquisaCategoria() {

        var PCategoriaTable = $("#PCategoriaTable").DataTable();

        PCategoriaTable.clear();

        var url = "@Url.Action("PesquisaCategoria","Pesquisa",null)?&filtro=" + $("#PCategoriaFiltro").val();

        $.getJSON(url, function (data) {

                        $.each(data, function (index, item) {
                            var botao = item["ID"] + ',"' + item["PlanoContaDesc"] + '"';
                        botao = "<input type='button' value='Selecionar' onclick='SelecionarCategoria(" + botao + ")' class='btn btn-xs btn-success' />";

                        PCategoriaTable.row.add([item["ID"],
                            item["PlanoContaDesc"],
                                               botao]).draw(false);

                    });
                }
            );
    }

     $(document).ready(function () {

         var PClienteTable = $("#PClienteTable").dataTable({
             "paging": false,
             "ordering": false,
             "info": false,
             "searching": false,
             "language": {
                 "emptyTable": "&nbsp"
             }
         }).DataTable();
    });

     $(document).ready(function () {

         var PCategoriaTable = $("#PCategoriaTable").dataTable({
             "paging": false,
             "ordering": false,
             "info": false,
             "searching": false,
             "language": {
                 "emptyTable": "&nbsp"
             }
         }).DataTable();
     });


    
</script>